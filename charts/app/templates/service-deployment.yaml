{{- range $service := .Values.services }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-{{ $service.name }}-deploy
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $.Release.Name }}-{{ $service.name }}
    tenant: {{ $.Values.tenant }}
    env: {{ $.Values.environment }}
    {{- if $service.useNlb }}
    external-nlb: {{ .Values.externalNlb }}
    {{- end }}
spec:
  replicas: {{ $service.replicaCount }}
  selector:
    matchLabels:
      app: {{ $.Release.Name }}-{{ $service.name }}
      env: {{ $.Values.environment }}
      {{- if $service.useNlb }}
      external-nlb: {{ .Values.externalNlb }}
      {{- end }}
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}-{{ $service.name }}
        env: {{ $.Values.environment }}
        {{- if $service.useNlb }}
        external-nlb: {{ .Values.externalNlb }}
        {{- end }}
    spec:
      nodeSelector:
      {{- with $.Values.nodeSelector }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $service.nodeSelector }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ $.Values.serviceAccount.name }} # should be in the same namespace as the deployment
      volumes:
        - name: spc-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ $.Release.Name }}-spc
      {{- if $.Values.initContainers }}
      initContainers:
        {{- range $initContainer := $.Values.initContainers }}
        - name: {{ $initContainer.name }}
          image: {{ $initContainer.image }}
          imagePullPolicy: {{ $initContainer.imagePullPolicy }}
          args:
            {{- range $arg := $initContainer.args }}
            - {{ $arg }}
            {{- end }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ $.Release.Name }}-{{ $service.name }}
          image: {{ $.Values.image }}
          {{- if $service.useNlb }}
          ports:
            - containerPort: {{ .Values.targetPort }}
              name: {{ .Release.Name }}
          {{- end }}
          command:
            {{- range $service.command }}
            - {{ . }}
            {{- end }}
          args: {{ $service.args }}
          resources:
            requests:
              memory: {{ $service.resources.requests.memory }}
              cpu: {{ $service.resources.requests.cpu }}
          volumeMounts:
            - name: spc-volume
              mountPath: "/mnt/secrets-store"
              readOnly: true
          env:
            {{- range $secret := $.Values.secrets.envs }}
            - name: {{ $secret.name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-secret
                  key: {{ $secret.name }}
            {{- end }}
{{ end }}

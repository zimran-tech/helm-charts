{{- range $job := .Values.jobs }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $.Release.Name }}-{{ $job.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $.Release.Name }}-{{ $job.name }}
    tenant: {{ .Values.tenant }}
    env: {{ $.Values.environment }}
spec:
  ttlSecondsAfterFinished: {{ $job.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}-{{ $job.name }}
    spec:
      nodeSelector:
      {{- with $.Values.nodeSelector }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $job.nodeSelector }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      restartPolicy: {{ $job.restartPolicy }}
      volumes:
        - name: spc-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ $.Release.Name }}-spc
      containers:
        - name: {{ $.Release.Name }}-{{ $job.name }}
          image: {{ $.Values.image }}
          command:
            {{- range $.Values.consumer.command }}
            - {{ . }}
            {{- end }}
          args: {{ $job.args }}
          resources:
            requests:
              memory: {{ $job.resources.requests.memory }}
              cpu: {{ $job.resources.requests.cpu }}
          volumeMounts:
            - name: spc-volume
              mountPath: "/mnt/secrets-store"
              readOnly: true
          env:
            {{- range $secret := $.Values.secrets.envs }}
            - name: {{ $secret.name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-secret
                  key: {{ $secret.name }}
            {{- end }}
{{- end }}

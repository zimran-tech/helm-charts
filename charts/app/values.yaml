image: IMAGE # specify image explicitly

environment: staging

port: 2000 # specify port explicitly
targetPort: 8000

ingress:
  class: alb
  annotations: {
    kubernetes.io/ingress.class: alb,
    alb.ingress.kubernetes.io/scheme: internet-facing,
    alb.ingress.kubernetes.io/target-type: ip,
    alb.ingress.kubernetes.io/certificate-arn: CERTIFICATE_ARN,
  }

serviceAccount:
  name: SERVICE_ACCOUNT_NAME
  annotations: {
    roleArn: ROLE_ARN
  }


app:
  resources:
    requests:
      memory: "96M"
      cpu: "0.05"
  replicaCount: 1
  args: [ "cd", "src", "&&", "gunicorn", "core.wsgi:application", "--bind", "0.0.0.0:8000" ]
  enabled: true

consumer:
  resources:
    requests:
      memory: "96M"
      cpu: "0.05"
  replicaCount: 1
  args: [ "cd", "src", "&&", "python3", "-m", "consumer" ]
  enabled: false

jobs:
#  - name: db-migration-job
#    ttlSecondsAfterFinished: 100
#    restartPolicy: Never
#    resources:
#      requests:
#        memory: "96M"
#        cpu: "0.05"
#    args: [ "python3", "src/manage.py", "migrate" ]
#  - name: collect-static-job
#    ttlSecondsAfterFinished: 10
#    restartPolicy: Never
#    resources:
#      requests:
#        memory: "96M"
#        cpu: "0.05"
#    args: [ "python3", "src/manage.py", "collectstatic", "--noinput" ]

initContainers:
#  - name: migrations-waiting-init
#    image: ghcr.io/groundnuty/k8s-wait-for:v2.0
#    imagePullPolicy: IfNotPresent
#    args:
#      - "job"
#      - "{{ $.Release.Name }}-{{ $dbMigrationJob.name }}"

secrets:
  awsSecretName: APP/ENVIRONMENT/SECRET_NAME # specify secret name explicitly
  envs:
    - name: DATABASE_URL
    - name: ENVIRONMENT
    - name: RABBITMQ_URL
    - name: REDIS_URL
    - name: SENTRY_DSN
